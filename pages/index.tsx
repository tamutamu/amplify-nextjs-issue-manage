import { useAuthenticator } from "@aws-amplify/ui-react";
import { API, Auth } from "aws-amplify";
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import { ListTicketsQuery, Ticket } from "../src/API";
import { listTickets } from "../src/graphql/queries";
import { eventSubscriber } from "../src/lib/eventStoreUtil";
import styles from "../styles/Home.module.css";

const Index: NextPage = () => {
  const [tickets, setTickets] = useState<Ticket[]>([]);

  const { user, signOut, route } = useAuthenticator((context) => [
    context.user,
    context.route,
  ]);

  useEffect(() => {
    fetchTickets();
    return eventSubscriber(fetchTickets, user);
  }, []);

  async function fetchTickets() {
    const { username } = await Auth.currentAuthenticatedUser();
    const result = await API.graphql({
      query: listTickets,
    });

    console.log(result);

    if ("data" in result && result.data) {
      const items = result.data as ListTicketsQuery;
      items.listTickets && setTickets(items.listTickets.items as Ticket[]);
    }

    // //Fetch images from S3 for posts that contain a cover image
    // const postsWithImages = await Promise.all(
    //   items.map(async (post) => {
    //     if (post.coverImage) {
    //       post.coverImage = await Storage.get(post.coverImage);
    //     }
    //     return post;
    //   })
    // );
    // setPosts(postsWithImages);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h3 className="text-8xl text-purple-600">Manage issue</h3>

        {[
          ["Home", "/"],
          ["Create Ticket", "/ticket/create"],
        ].map(([title, url], index) => (
          <div key={index} className={styles.description}>
            <Link href={url}>
              <a className=""> {title}</a>
            </Link>
          </div>
        ))}

        <div>
          {tickets.map((item) => {
            return (
              <div key={item.id}>
                <h4>{item.title}</h4>
              </div>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Index;
